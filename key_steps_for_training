1. Data cleaning
  e.g. we use openpose to label the data, but sometimes, the label is wrong.
  or there is no person in the image at all. All these images needed to be delete before training.
  solution: we only use the images all 6 keypoints(nose, neck, shoulders, eyes) are detected sucessfully.

2. Learning rate adjustment strategy
  At first, it can be 0.00025, and after some iterations, e.g. 100000, it can be smaller 0.0001
  
3. Flip operation
  Pay attention to the eyes order. We can visualize by imshow in a loop.
  
4. Model freeze
  Use tf_graph_tool.py shell to freeze the model(.meta, checkpoint, .index) into one .pb file.

5.Evaluation methods
  Select the test sets and the methods. If detected all the six joints, nums_detected_right += 1
  Accuracy is another feature that can be used.
  
6. Batchsize num and other parameters

7. Open tensorboard
  cd Log
  Log$ tensorboard --logdir=1228-NKShapeNetSHG256x288Head-lr2.5e4-5w --port=6008
  copy the server IP address： 113.106.88.100:22
  Open Chrome, replace 22 at the last with tensorboard's port：6008
  click into the address, you will see tensorboard： 113.106.88.100:6008

8. Discussion with yj
  The performance 95.4% is okay for usage. For the test_1000, the remaining 44 images, there are following NG reasons:
  (1)customer is not corperative with the machine; e.g. parents with a baby in front of them
  (2)heavy coats or sweaters
  (3)Occlusion for some joints
  (4)Openpose's wrong label, e.g. openpose doesnot extract the object we want to focus on.
  
9. Next direction
  (1)For coats sample, label the images mannually;
  (2)Change the strategy for choosing one target person from multiple candidate;
  (3)
  
10.Model Deploy
  Give the model 1228-NKShapeNetSHG256x288Head-lr2.5e4-4w-105000V3-120000.pb to linlj
  based on 105000 model, based 502000.pb, trained 120000 iterations on 4w images.
  Change the name to: Joints-HeadShoulder-V2-jiapy-0103.pb
  
